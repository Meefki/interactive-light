{"version":3,"file":"interactive-light.js","sources":["D:/FoundryVTT/Data/modules/interactive-light/src/scripts/constants/flag.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/constants/locale.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/constants/settings.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/utils/logger.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/permission-manager.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/token-interaction-manager.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/light-texture-controller.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/utils/strings.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/ambient-light-config.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/hooks.ts","../src/interactive-light.ts"],"sourcesContent":["// common\r\nconst flag = \"flags\";\r\nexport const scope = \"interactive-light\";\r\n\r\n// Light\r\nexport const interactiveName = \"interactive\";\r\nexport const pathName = \"path\";\r\nexport const tileIdName = \"tile-id\";\r\nexport const actorIdName = 'actor-id';\r\nexport const tokenIdName = 'token-id';\r\nexport const interactive = `${flag}.${scope}.${interactiveName}`;\r\nexport const path = `${flag}.${scope}.${pathName}`;\r\nexport const tokenId = `${flag}.${scope}.${tokenIdName}`;\r\n\r\n// Tile/token\r\nexport const lightIdName = \"light-id\";\r\n\r\nexport * as flag from \"./flag\";\r\n","const key = 'INTERACTIVE_LIGHT';\r\n\r\nexport const enabled = `${key}.Enabled`;\r\nexport const enabledHint = `${key}.EnabledHint`;\r\nexport const path = `${key}.Path`;\r\n\r\nexport * as locale from \"./locale\";","export const defaultIconPath = CONST.DEFAULT_TOKEN;\r\nexport const tileHeight = game.canvas?.grid?.size ?? 100;\r\nexport const tileWidth = game.canvas?.grid?.size ?? 100;\r\n\r\nexport * as settings from \"./settings\";\r\n","// console colors\r\nconst consoleColor1 = \"color: #7bf542\";\r\nconst consoleColor2 = \"color: #d8eb34\";\r\nconst consoleColor3 = \"color: #ffffff\";\r\n\r\nexport enum LogLevels {\r\n    'debug' = 0,\r\n    'info' = 1,\r\n    'warn' = 2,\r\n    'error' = 3\r\n}\r\n\r\nexport class Logger {\r\n    public static minLogLevel: LogLevels = LogLevels.warn;\r\n\r\n    public static log(...object: any) {\r\n        if (this.minLogLevel > LogLevels.debug) return;\r\n\r\n        console.log(\r\n            `%c Interactive%cLight %c`,\r\n            consoleColor1,\r\n            consoleColor2,\r\n            consoleColor3,\r\n            ...object\r\n        );\r\n    }\r\n\r\n    public static info(...object: any) {\r\n        if (this.minLogLevel > LogLevels.info) return;\r\n\r\n        console.info(\r\n            `%c Interactive%cLight %c`,\r\n            consoleColor1,\r\n            consoleColor2,\r\n            consoleColor3,\r\n            ...object\r\n        )\r\n    }\r\n\r\n    public static warn(...object: any) {\r\n        if (this.minLogLevel > LogLevels.warn) return;\r\n\r\n        console.warn(\r\n            `%c Interactive%cLight %c`,\r\n            consoleColor1,\r\n            consoleColor2,\r\n            consoleColor3,\r\n            ...object\r\n        )\r\n    }\r\n\r\n    public static error(...object: any) {\r\n        if (this.minLogLevel > LogLevels.error) return;\r\n\r\n        console.error(\r\n            `%c Interactive%cLight %c`,\r\n            consoleColor1,\r\n            consoleColor2,\r\n            consoleColor3,\r\n            ...object\r\n        );\r\n    }\r\n}\r\n\r\nexport * as logger from \"./logger\";\r\n","import { flag } from \"./constants/flag\";\r\nimport { TokenInteractionManager } from \"./token-interaction-manager\";\r\nimport { Logger } from \"./utils/logger\";\r\n\r\nexport class PermissionManager {\r\n    public static init = () => {\r\n        socketlib.registerModule(flag.scope);\r\n        this.socketRegisterToggleLightHidden();\r\n        this.socketRegisterAddClickHandler();\r\n    };\r\n\r\n    private static socketRegisterToggleLightHidden = () => {\r\n        const socket = socketlib.modules.get(flag.scope);\r\n        if (!socket) return;\r\n        socket.register(\"toggleLightHidden\", (lightId: string) => {\r\n            Logger.log(\"Chached the event\");\r\n            const light = game.canvas?.lighting?.get(lightId);\r\n            if (!light) return false;\r\n            Logger.log(\"Updating light document\");\r\n            return light.document.update({ hidden: !light.document.hidden });\r\n        });\r\n    };\r\n\r\n    private static socketRegisterAddClickHandler = () => {\r\n        const socket = socketlib.modules.get(flag.scope);\r\n        if (!socket) return;\r\n        socket.register(\r\n            \"addClickHandler\",\r\n            (tokenId: string, userId: string) => {\r\n                const token = game.canvas?.tokens?.get(tokenId);\r\n                Logger.log(token);\r\n                if (!token) return;\r\n                TokenInteractionManager.addEventHandler(token);\r\n            }\r\n        );\r\n    };\r\n\r\n    public static toggleLightHidden = async (lightId: string) => {\r\n        if (!lightId) return;\r\n        const light = game.canvas?.lighting?.get(lightId);\r\n        if (!light) return;\r\n        Logger.log(\"Found light\", light);\r\n\r\n        if (game.user?.isGM) {\r\n            Logger.log(\"GM's click, allow to change the light\");\r\n            await light.document.update({ hidden: !light.document.hidden });\r\n            return;\r\n        }\r\n\r\n        Logger.log(\"User's click, sending the request to the server\");\r\n\r\n        Logger.log(\"sending the request to the server\");\r\n        Logger.log(socketlib);\r\n        Logger.log(socketlib.modules);\r\n        if (socketlib.modules.get(flag.scope)) {\r\n            const module = socketlib.modules.get(flag.scope);\r\n            if (!module) return;\r\n\r\n            module.executeAsGM(\"toggleLightHidden\", lightId);\r\n        } else {\r\n            Logger.error(`Couldn't find a registered module ${flag.scope}`);\r\n        }\r\n        Logger.log(socketlib.modules);\r\n    };\r\n}\r\n","import { flag } from \"./constants/flag\";\r\nimport { PermissionManager } from \"./permission-manager\";\r\nimport { Logger } from \"./utils/logger\";\r\n\r\nexport class TokenInteractionManager {\r\n    public static readonly HOOK_NAME = \"leftClickToken\";\r\n    private static hookId?: number;\r\n\r\n    public static init() {\r\n        this.setupTokenClickHandler();\r\n    }\r\n\r\n    private static setupTokenClickHandler() {\r\n        const tokens = (game.canvas?.tokens?.objects?.children as any[])\r\n            .filter((t) => t.document.getFlag(flag.scope, flag.lightIdName))\r\n            .map((t) => {\r\n                this.addEventHandler(t);\r\n                return t;\r\n            });\r\n\r\n        Logger.log(\"Retriving tokens linked to a light object\", tokens);\r\n    }\r\n\r\n    public static addEventHandlerById(tokenId: string) {\r\n        const token = game.canvas?.tokens?.get(tokenId);\r\n        if (token) {\r\n            this.addEventHandler(token);\r\n        }\r\n    }\r\n\r\n    public static addEventHandler(token: Token) {\r\n        token.onclick = this.handleTokenClick;\r\n    }\r\n\r\n    public static async handleTokenClick(event: any): Promise<boolean> {\r\n        const token = event.currentTarget as Token;\r\n        if (!token) return true;\r\n        const lightId = token.document.getFlag(flag.scope, flag.lightIdName);\r\n        if (!lightId) return true;\r\n\r\n        await PermissionManager.toggleLightHidden(lightId);\r\n\r\n        Logger.log(`Token clicked by ${game.user?.name}`, {\r\n            token: token.id,\r\n            light: lightId,\r\n            user: game.userId,\r\n        });\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { flag } from \"./constants/flag\";\r\nimport { settings } from \"./constants/settings\";\r\nimport { TokenInteractionManager } from \"./token-interaction-manager\";\r\nimport { Logger } from \"./utils/logger\";\r\n\r\nexport class LightTextureController {\r\n    public static updateTextureSource = async (\r\n        tokenId: string,\r\n        lightId: string,\r\n        path: string\r\n    ): Promise<boolean> => {\r\n        if (!game.user?.isGM) return false;\r\n        if (!tokenId) return false;\r\n\r\n        const token = game.canvas?.tokens?.get(tokenId);\r\n        Logger.log(token);\r\n\r\n        if (!token) {\r\n            Logger.warn(`Token with ID ${tokenId} not found`);\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            Logger.log(`UPDATING TOKEN ${tokenId} TEXTURE SOURCE`);\r\n\r\n            await token.document.update({\r\n                texture: { src: path },\r\n            });\r\n            await token.document.setFlag(\r\n                flag.scope,\r\n                flag.lightIdName,\r\n                lightId as never\r\n            );\r\n\r\n            return true;\r\n        } catch (error) {\r\n            Logger.error(`Failed to update token ${tokenId}:`, error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    public static delete = async (\r\n        tokenId: string,\r\n        document: AmbientLightDocument | null\r\n    ) => {\r\n        if (!game.user?.isGM) return;\r\n\r\n        if (tokenId) {\r\n            const token = game.canvas?.tokens?.get(tokenId);\r\n            if (token) {\r\n                Logger.log(`DELETING TOKEN: ${tokenId}`);\r\n                const actorId = token.actor?.id;\r\n\r\n                game.canvas?.tokens?.removeChild(token);\r\n                await token.document.delete();\r\n\r\n                if (actorId) {\r\n                    const actor = game.actors?.get(actorId);\r\n                    if (actor) {\r\n                        Logger.log(`DELETING ASSOCIATED ACTOR: ${actorId}`);\r\n                        await actor.delete();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (document) {\r\n            document.setFlag(flag.scope, flag.tokenIdName, tokenId as never);\r\n            document.setFlag(flag.scope, flag.pathName, \"\" as never);\r\n        }\r\n    };\r\n\r\n    private static createActor = async (\r\n        lightId: string\r\n    ): Promise<Actor | undefined> => {\r\n        if (!game.user?.isGM) return;\r\n\r\n        const actor = await Actor.create({\r\n            name: `light-${lightId}`,\r\n            type: \"base\",\r\n        });\r\n\r\n        return actor;\r\n    };\r\n\r\n    public static createActorToken = async (\r\n        imgPath: string,\r\n        x: number,\r\n        y: number,\r\n        ambientLightDoc: AmbientLightDocument\r\n    ): Promise<TokenDocument | undefined> => {\r\n        if (!ambientLightDoc?.id) return;\r\n\r\n        const actor = await this.createActor(ambientLightDoc.id);\r\n        if (!actor) return;\r\n\r\n        Logger.log(\"light pos\", `${x} : ${y}`);\r\n        const tokenDoc = await TokenDocument.create(\r\n            {\r\n                name: actor.name,\r\n                actorId: actor.id,\r\n                x: x,\r\n                y: y,\r\n                width: 1,\r\n                height: 1,\r\n                disposition: CONST.TOKEN_DISPOSITIONS.SECRET,\r\n                texture: {\r\n                    src: imgPath,\r\n                    anchorX: 0.5,\r\n                    anchorY: 0.5,\r\n                },\r\n            },\r\n            { parent: canvas.scene }\r\n        );\r\n\r\n        Logger.log(\"Token doc created\", tokenDoc);\r\n        if (!tokenDoc) return;\r\n        (tokenDoc as any)?.update({ movementAction: \"blink\" });\r\n        const token = game.canvas?.tokens?.get(tokenDoc.id);\r\n        if (token) {\r\n            token.onclick = TokenInteractionManager.handleTokenClick;\r\n            Logger.log(\"Tocken created\", game.canvas?.tokens?.get(tokenDoc.id));\r\n            const module = socketlib.modules.get(flag.scope);\r\n            if (module) {\r\n                game.users?.forEach(u => {\r\n                    if (!u.isGM) {\r\n                        module.executeAsUser('addClickHandler', u.id, token.id);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        await tokenDoc.setFlag(\r\n            flag.scope,\r\n            flag.lightIdName,\r\n            ambientLightDoc.id as never\r\n        );\r\n        await ambientLightDoc.setFlag(\r\n            flag.scope,\r\n            flag.tokenIdName,\r\n            tokenDoc.id as never\r\n        );\r\n\r\n        return tokenDoc;\r\n    };\r\n\r\n    public static changeTokenPositions = async (\r\n        tokenId: string,\r\n        posX: number,\r\n        posY: number\r\n    ): Promise<boolean> => {\r\n        if (!game.user?.isGM) return false;\r\n\r\n        const token = game.canvas?.tokens?.get(tokenId);\r\n        if (!token) {\r\n            Logger.log(`Couldn't find a token with id ${tokenId}`);\r\n            return false;\r\n        }\r\n\r\n        const updates: Record<string, number> = {};\r\n\r\n        if (posX === 0 || posX) {\r\n            const x = this.culcObjPosition(posX, \"X\");\r\n            updates.x = x;\r\n            Logger.log(`POS X UPDATED: ${x}`);\r\n        }\r\n\r\n        if (posY === 0 || posY) {\r\n            const y = this.culcObjPosition(posY, \"Y\");\r\n            updates.y = y;\r\n            Logger.log(`POS Y UPDATED: ${y}`);\r\n        }\r\n\r\n        if (Object.keys(updates).length > 0) {\r\n            try {\r\n                await token.document.update(updates);\r\n            } catch (error) {\r\n                Logger.error(`Unnable to update token [${tokenId}]`);\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    public static culcObjPosition = (\r\n        light: number,\r\n        axis: \"X\" | \"Y\"\r\n    ): number => {\r\n        return light - this.getTileSize(axis) / 2;\r\n    };\r\n\r\n    private static getTileSize = (axis: \"X\" | \"Y\"): number => {\r\n        switch (axis) {\r\n            case \"X\":\r\n                return settings.tileWidth;\r\n            case \"Y\":\r\n                return settings.tileHeight;\r\n        }\r\n    };\r\n}\r\n","export function fillTemplate(template: string, values: Record<string, unknown>): string {\r\n    return template.replace(/\\${(\\w+)}/g, (_, key) => \r\n        values[key] !== undefined ? String(values[key]) : ''\r\n    );\r\n}","import { flag } from \"./constants/flag\";\r\nimport { locale } from \"./constants/locale\";\r\nimport { settings } from \"./constants/settings\";\r\nimport { LightTextureController } from \"./light-texture-controller\";\r\nimport { TokenInteractionManager } from \"./token-interaction-manager\";\r\nimport { Logger } from \"./utils/logger\";\r\nimport { fillTemplate } from \"./utils/strings\";\r\n\r\nexport class AmbientLightConfig {\r\n    static #checkboxInput = \"chekbox-input\";\r\n    static #textInput = \"text-input\";\r\n    static #inputIdFormat = \"${appId}.${flagPath}.${type}\";\r\n\r\n    //#region Hooks\r\n    //#region trackLightPositionHook\r\n\r\n    public static trackLightPositionHook = (\r\n        doc: AmbientLightDocument,\r\n        change: Record<string, any>\r\n    ) => {\r\n        Logger.log(\"=========================================================\");\r\n        Logger.log(\"---------------------------------------------------------\");\r\n        Logger.log(\r\n            \"AmbientLight updated!\",\r\n            document,\r\n            change,\r\n            \"x\" in change,\r\n            \"y\" in change,\r\n            \"x\" in change || \"y\" in change\r\n        );\r\n\r\n        if (\"x\" in change || \"y\" in change) {\r\n            Logger.log(\"Light position changed:\", change.x, change.y);\r\n\r\n            const interactive = doc.getFlag(\r\n                flag.scope,\r\n                flag.interactiveName\r\n            ) as boolean;\r\n            const tokenId = doc.getFlag(flag.scope, flag.tokenIdName) as string;\r\n\r\n            Logger.log(`tokenId: ${tokenId}`);\r\n            if (!interactive || !tokenId) return;\r\n            const ok = LightTextureController.changeTokenPositions(\r\n                tokenId,\r\n                change.x,\r\n                change.y\r\n            );\r\n            if (!ok) {\r\n                doc.setFlag(flag.scope, flag.tokenIdName, \"\" as never);\r\n                doc.setFlag(flag.scope, flag.pathName, \"\" as never);\r\n            }\r\n        }\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region deleteAmbientLightHook\r\n\r\n    public static deleteAmbientLightHook = async (\r\n        doc: AmbientLightDocument,\r\n        options: any,\r\n        userId: string\r\n    ) => {\r\n        Logger.log(`AMBIENT LIGHT ${doc.id} WAS DELETED`);\r\n\r\n        const tokenId = doc.getFlag(flag.scope, flag.tokenIdName) as string;\r\n\r\n        if (!tokenId) return;\r\n        await LightTextureController.delete(tokenId, null);\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region renderLightConfigHook\r\n\r\n    public static renderLightConfigHook = (\r\n        app: any,\r\n        html: HTMLElement,\r\n        context: any,\r\n        options: any\r\n    ) => {\r\n        if (options && !options.isFirstRender) return;\r\n\r\n        const document: AmbientLightDocument = app.document;\r\n        const isInteractive =\r\n            document.getFlag(flag.scope, flag.interactiveName) ?? false;\r\n\r\n        const interactiveElement = this.createInteractiveCheckboxHtmlElement(\r\n            app.id,\r\n            isInteractive\r\n        );\r\n\r\n        const path = document.getFlag(flag.scope, flag.pathName);\r\n        const pathElement = this.createInteractivePathHtmlElement(\r\n            app.id,\r\n            path,\r\n            isInteractive\r\n        );\r\n\r\n        const advancedTabContent = html.querySelector(\r\n            '[data-application-part=\"advanced\"]'\r\n        );\r\n        advancedTabContent?.appendChild(interactiveElement);\r\n        advancedTabContent?.appendChild(pathElement!);\r\n\r\n        html.onsubmit = this.onConfigSubmit;\r\n    };\r\n\r\n    private static createInteractiveCheckboxHtmlElement = (\r\n        id: string,\r\n        checked: boolean\r\n    ): HTMLElement => {\r\n        const formGroup = document.createElement(\"div\");\r\n        formGroup.className = \"form-group\";\r\n\r\n        const label = document.createElement(\"label\") as HTMLLabelElement;\r\n        label.innerText = game.i18n!.localize(locale.enabled);\r\n\r\n        const formFields = document.createElement(\"div\");\r\n        formFields.className = \"form-fields\";\r\n\r\n        const input = document.createElement(\"input\") as HTMLInputElement;\r\n        input.type = \"checkbox\";\r\n        input.name = flag.interactive;\r\n        input.checked = checked;\r\n        input.id = fillTemplate(this.#inputIdFormat, {\r\n            appId: id,\r\n            flagPath: flag.interactive,\r\n            type: this.#checkboxInput,\r\n        });\r\n        input.onchange = this.onInteractiveCheckboxChanged;\r\n\r\n        const hint = document.createElement(\"p\") as HTMLParagraphElement;\r\n        hint.className = \"hint\";\r\n        hint.innerText = game.i18n!.localize(locale.enabledHint);\r\n\r\n        formFields.appendChild(input);\r\n        formGroup.appendChild(label);\r\n        formGroup.appendChild(formFields);\r\n        formGroup.appendChild(hint);\r\n\r\n        return formGroup;\r\n    };\r\n\r\n    private static createInteractivePathHtmlElement = (\r\n        appId: string,\r\n        path: string | undefined,\r\n        checked: boolean\r\n    ): HTMLElement => {\r\n        const formGroup = document.createElement(\"div\");\r\n        formGroup.className = \"form-group\";\r\n        formGroup.id = fillTemplate(this.#inputIdFormat, {\r\n            appId: appId,\r\n            flagPath: flag.path,\r\n            type: \"form-group\",\r\n        });\r\n        formGroup.hidden = !checked;\r\n\r\n        const label = document.createElement(\"label\") as HTMLLabelElement;\r\n        label.htmlFor = flag.path;\r\n        label.innerText = game.i18n!.localize(locale.path);\r\n\r\n        const formFields = document.createElement(\"div\");\r\n        formFields.className = \"form-fields\";\r\n        formFields.innerHTML = `<file-picker name=\"${\r\n            flag.path\r\n        }\" type=\"image\" id=\"${appId}-${flag.path}\" value=\"${\r\n            path ?? \"\"\r\n        }\"></file-picker>`;\r\n\r\n        formGroup.appendChild(label);\r\n        formGroup.appendChild(formFields);\r\n\r\n        return formGroup;\r\n    };\r\n\r\n    private static onInteractiveCheckboxChanged = (ev: Event) => {\r\n        const input = ev.target as HTMLInputElement;\r\n        if (!input) return;\r\n\r\n        const appId = input.id.slice(\r\n            0,\r\n            input.id.indexOf(\r\n                fillTemplate(this.#inputIdFormat, {\r\n                    appId: \"\",\r\n                    flagPath: flag.interactive,\r\n                    type: this.#checkboxInput,\r\n                })\r\n            )\r\n        );\r\n        const checked = input.checked;\r\n        const pathFormGroup = document.getElementById(\r\n            fillTemplate(this.#inputIdFormat, {\r\n                appId: appId,\r\n                flagPath: flag.path,\r\n                type: \"form-group\",\r\n            })\r\n        ) as HTMLDivElement;\r\n\r\n        if (!pathFormGroup) return;\r\n        pathFormGroup.hidden = !checked;\r\n    };\r\n\r\n    private static onConfigSubmit = async (ev: SubmitEvent) => {\r\n        Logger.log(\"AMBIENT LIGHT CONFIGURATION SUBMITTED\");\r\n\r\n        const interactiveChk = this.getInteractiveCheckbox(\r\n            ev.target as HTMLFormElement\r\n        );\r\n        const pathInput = this.getPathInput(ev.target as HTMLFormElement);\r\n        const appId = this.getAppIdFromInteractiveCheckbox(interactiveChk);\r\n        const lightId = appId.split(\"-\").pop();\r\n        if (!lightId) return;\r\n        const ambientLight = canvas.lighting?.get(lightId);\r\n        if (!ambientLight) return;\r\n        const tokenId = ambientLight.document.getFlag(\r\n            flag.scope,\r\n            flag.tokenIdName\r\n        );\r\n        let pathComputing =\r\n            pathInput.value ||\r\n            ambientLight.document.getFlag(flag.scope, flag.pathName) ||\r\n            settings.defaultIconPath;\r\n        const path = pathComputing;\r\n\r\n        if (interactiveChk.checked) {\r\n            const changed = await LightTextureController.updateTextureSource(\r\n                tokenId,\r\n                lightId,\r\n                path\r\n            );\r\n            if (changed) return;\r\n\r\n            Logger.log(\"CREATING TOKEN\");\r\n            LightTextureController.createActorToken(\r\n                path,\r\n                LightTextureController.culcObjPosition(\r\n                    ambientLight.position._x,\r\n                    \"X\"\r\n                ),\r\n                LightTextureController.culcObjPosition(\r\n                    ambientLight.position._y,\r\n                    \"Y\"\r\n                ),\r\n                ambientLight.document\r\n            ).then((tokenDoc: TokenDocument | undefined) => {\r\n                Logger.log(\"DATA\", tokenDoc);\r\n            });\r\n        } else {\r\n            LightTextureController.delete(tokenId, ambientLight.document);\r\n        }\r\n    };\r\n\r\n    private static getInteractiveCheckbox = (\r\n        form: HTMLFormElement\r\n    ): HTMLInputElement => {\r\n        return form.querySelector(\r\n            `[name=\"${flag.interactive}\"]`\r\n        ) as HTMLInputElement;\r\n    };\r\n\r\n    private static getPathInput = (form: HTMLFormElement): HTMLInputElement => {\r\n        return form.querySelector(`[name=\"${flag.path}\"]`) as HTMLInputElement;\r\n    };\r\n\r\n    private static getAppIdFromInteractiveCheckbox = (\r\n        interactiveChk: HTMLInputElement\r\n    ): string => {\r\n        return interactiveChk.id.slice(\r\n            0,\r\n            interactiveChk.id.indexOf(\r\n                fillTemplate(this.#inputIdFormat, {\r\n                    appId: \"\",\r\n                    flagPath: flag.interactive,\r\n                    type: this.#checkboxInput,\r\n                })\r\n            )\r\n        );\r\n    };\r\n\r\n    //#endregion\r\n    //#endregion\r\n}\r\n","import { AmbientLightConfig } from \"./ambient-light-config\";\r\nimport { flag } from \"./constants/flag\";\r\nimport { PermissionManager } from \"./permission-manager\";\r\nimport { TokenInteractionManager } from \"./token-interaction-manager\";\r\nimport { Logger } from \"./utils/logger\";\r\n\r\nexport function initHooks() {\r\n    Hooks.once(\"init\", initHook);\r\n    Hooks.once(\"ready\", readyHook);\r\n}\r\n\r\nfunction initHook(data: any) {\r\n    Hooks.on(\"ready\", readyHook);\r\n    Hooks.on(\r\n        \"renderAmbientLightConfig\",\r\n        AmbientLightConfig.renderLightConfigHook\r\n    );\r\n    // Hooks.on(\"preUpdateAmbientLight\", PermissionManager.ambienLightHiddenChanges);\r\n    Hooks.on(\"updateAmbientLight\", AmbientLightConfig.trackLightPositionHook);\r\n    Hooks.on(\"deleteAmbientLight\", AmbientLightConfig.deleteAmbientLightHook);\r\n\r\n    if (!game.modules?.get(\"socketlib\")?.active) {\r\n        Logger.error(\"Socketlib is not active!\");\r\n    }\r\n    PermissionManager.init();\r\n    // Hooks.on(\"createToken\", (ev: any) => {\r\n    //     Logger.log(\"Token has created\", ev);\r\n    //     if (!(ev instanceof Token)) {\r\n    //         Logger.log(\"It's not a token\");\r\n    //         return;\r\n    //     }\r\n    //     const token = ev as Token;\r\n    //     Logger.log(\"It's a token\");\r\n    //     const lightId = token.document.getFlag(flag.scope, flag.lightIdName);\r\n    //     if (lightId) {\r\n    //         Logger.log(`It's a light token. Light ID [${lightId}]`);\r\n    //         token.onclick = TokenInteractionManager.handleTokenClick;\r\n    //     }\r\n    // });\r\n}\r\n\r\nfunction readyHook() {\r\n    TokenInteractionManager.init();\r\n}\r\n\r\nexport * as register from \"./hooks\";\r\n","import { register } from \"./scripts/hooks\";\r\n\r\nregister.initHooks();\r\n"],"names":["flag","scope","interactiveName","pathName","tokenIdName","interactive","path","lightIdName","key","enabled","enabledHint","defaultIconPath","_a","_b","tileHeight","tileWidth","consoleColor1","consoleColor2","consoleColor3","Logger","object","__publicField","_PermissionManager","flag.scope","socket","lightId","light","tokenId","userId","token","TokenInteractionManager","_c","module","PermissionManager","tokens","t","flag.lightIdName","event","_LightTextureController","error","document","_d","_e","_f","_g","actorId","actor","flag.tokenIdName","flag.pathName","imgPath","x","y","ambientLightDoc","tokenDoc","u","posX","posY","updates","axis","settings.tileWidth","settings.tileHeight","LightTextureController","fillTemplate","template","values","_","_checkboxInput","_textInput","_inputIdFormat","_AmbientLightConfig","__privateAdd","doc","change","flag.interactiveName","options","app","html","context","isInteractive","interactiveElement","pathElement","advancedTabContent","id","checked","formGroup","label","locale.enabled","formFields","input","flag.interactive","__privateGet","hint","locale.enabledHint","appId","flag.path","locale.path","ev","pathFormGroup","interactiveChk","pathInput","ambientLight","settings.defaultIconPath","form","AmbientLightConfig","initHooks","initHook","readyHook","data","register.initHooks"],"mappings":"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"}