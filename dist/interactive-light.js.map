{"version":3,"file":"interactive-light.js","sources":["D:/FoundryVTT/Data/modules/interactive-light/src/scripts/constants/flag.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/constants/settings.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/utils/logger.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/switch.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/ambient-ight-tile-controller.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/constants/locale.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/utils/strings.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/ambient-light-config.ts","D:/FoundryVTT/Data/modules/interactive-light/src/scripts/hooks.ts","../src/interactive-light.ts"],"sourcesContent":["// common\r\nconst flag = \"flags\";\r\nexport const scope = \"interactive-light\";\r\n\r\n// Light\r\nexport const interactiveName = \"interactive\";\r\nexport const pathName = \"path\";\r\nexport const tileIdName = \"tile-id\";\r\nexport const interactive = `${flag}.${scope}.${interactiveName}`;\r\nexport const path = `${flag}.${scope}.${pathName}`;\r\n\r\n// Tile\r\nexport const lightIdName = \"light-id\";\r\n\r\nexport * as flag from \"./flag\";\r\n","// environment\r\nexport const debug = true;\r\n\r\n// settings\r\nexport const defaultIconPath = \"\";\r\nexport const tileHeight = game.canvas?.grid?.size ?? 100;\r\nexport const tileWidth = game.canvas?.grid?.size ?? 100;\r\n\r\nexport * as settings from \"./settings\";\r\n","// console colors\r\nexport const consoleColor1 = \"color: #7bf542\";\r\nexport const consoleColor2 = \"color: #d8eb34\";\r\nexport const consoleColor3 = \"color: #ffffff\";\r\n\r\nexport class Logger {\r\n    public static log(...object: any) {\r\n        console.log(\r\n            `%c Interactive%cLight %c`,\r\n            consoleColor1,\r\n            consoleColor2,\r\n            consoleColor3,\r\n            ...object\r\n        );\r\n    }\r\n}\r\n\r\nexport * as logger from \"./logger\";\r\n","import { Logger } from \"./utils/logger\";\r\n\r\nexport class Switcher {\r\n    public static switchLight = (ev: any) => {\r\n        Logger.log(ev);\r\n    }\r\n}","import { flag, interactive } from \"./constants/flag\";\r\nimport { settings } from \"./constants/settings\";\r\nimport { Switcher } from \"./switch\";\r\nimport { Logger } from \"./utils/logger\";\r\n\r\nexport class AmbientLightTileController {\r\n    public static updateTileTextureSource = (\r\n        tileId: string,\r\n        lightId: string,\r\n        path: string\r\n    ): boolean => {\r\n        if (tileId) {\r\n            const tile = game.canvas?.tiles?.get(tileId);\r\n            if (settings.debug) Logger.log(tile);\r\n            if (tile) {\r\n                if (settings.debug)\r\n                    Logger.log(`UPDATING TILE ${tileId} TEXTURE SOURCE`);\r\n                tile.document.setFlag(\r\n                    flag.scope,\r\n                    flag.lightIdName,\r\n                    lightId as never\r\n                );\r\n                tile.document.update({ texture: { src: path } });\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    public static deleteTile(\r\n        tileId: string,\r\n        document: AmbientLightDocument | null\r\n    ) {\r\n        if (tileId) {\r\n            const tile = game.canvas?.tiles?.get(tileId);\r\n            if (tile) {\r\n                if (settings.debug) Logger.log(`DELETING TILE: ${tileId}`);\r\n                game.canvas?.tiles?.removeChild(tile);\r\n                tile.document.delete();\r\n            }\r\n        }\r\n\r\n        if (document) {\r\n            document.setFlag(flag.scope, flag.tileIdName, tileId as never);\r\n            document.setFlag(flag.scope, flag.pathName, \"\" as never);\r\n        }\r\n    }\r\n\r\n    public static createTile = async (\r\n        imgPath: string,\r\n        x: number,\r\n        y: number,\r\n        ambientLightDoc: AmbientLightDocument\r\n    ): Promise<TileDocument | undefined> => {\r\n        if (settings.debug) Logger.log(\"CREATING NEW TILE\");\r\n\r\n        const tileDoc = await TileDocument.create(\r\n            {\r\n                height: settings.tileHeight,\r\n                width: settings.tileWidth,\r\n                x: x,\r\n                y: y,\r\n                texture: {\r\n                    src: imgPath,\r\n                    anchorX: 0.5,\r\n                    anchorY: 0.5,\r\n                },\r\n            },\r\n            { parent: canvas.scene }\r\n        );\r\n        Logger.log(tileDoc);\r\n        if (!tileDoc) return;\r\n\r\n        tileDoc.setFlag(\r\n            flag.scope,\r\n            flag.lightIdName,\r\n            ambientLightDoc.id as never\r\n        );\r\n        ambientLightDoc.setFlag(\r\n            flag.scope,\r\n            flag.tileIdName,\r\n            tileDoc.id as never\r\n        );\r\n\r\n        const tile = canvas.tiles?.get(tileDoc._id);\r\n        if (tile) {\r\n            tile.interactive = true;\r\n            tile.on(\"pointerdown\", (event) => {\r\n                Logger.log(\"clicked\");\r\n                Switcher.switchLight(event);\r\n            });\r\n        }\r\n        Logger.log(tile);\r\n\r\n        if (settings.debug) Logger.log(`TILE DOC CREATED: ${tileDoc.id}`);\r\n        return tileDoc;\r\n    };\r\n\r\n    public static changeTilePositions = (\r\n        tileId: string,\r\n        posX: number,\r\n        posY: number\r\n    ): boolean => {\r\n        const tile = game.canvas?.tiles?.get(tileId);\r\n        if (!tile) {\r\n            Logger.log(`Couldn't find a tile with id ${tileId}`);\r\n            return false;\r\n        }\r\n\r\n        if (posX == 0 || posX) {\r\n            const x = this.culcTilePosition(posX, \"X\");\r\n            tile.document.update({ x: x });\r\n            Logger.log(`POS X UPDATED: ${x}`);\r\n        }\r\n        if (posY == 0 || posY) {\r\n            const y = this.culcTilePosition(posY, \"Y\");\r\n            tile.document.update({ y: y });\r\n            Logger.log(`POS Y UPDATED: ${y}`);\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    public static culcTilePosition = (\r\n        light: number,\r\n        axis: \"X\" | \"Y\"\r\n    ): number => {\r\n        return light - this.getTileSize(axis) / 2;\r\n    };\r\n\r\n    private static getTileSize = (axis: \"X\" | \"Y\"): number => {\r\n        switch (axis) {\r\n            case \"X\":\r\n                return settings.tileWidth;\r\n            case \"Y\":\r\n                return settings.tileHeight;\r\n        }\r\n    };\r\n\r\n    // public static initTitles = () => {\r\n    //     canvas.tiles?.placeables.forEach(t => {\r\n    //         if (t.document.getFlag(flag.scope, flag.lightIdName)) {\r\n    //             this.registerTileClickEvent(t.document);\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    public static registerTileClickEvent = (tileDoc: TileDocument) => {\r\n        Logger.log(`Register Tile click event`, tileDoc);\r\n        if (!tileDoc.getFlag(flag.scope, flag.lightIdName)) return;\r\n        if (!tileDoc.id) return;\r\n        const tile = canvas.tiles?.get(tileDoc.id);\r\n        if (!tile) return;\r\n        tile.interactive = true;\r\n        tile.eventMode = 'static';\r\n        tile.on('pointerdown', Switcher.switchLight);\r\n        Logger.log(tile);\r\n    }\r\n}\r\n","const key = 'INTERACTIVE_LIGHT';\r\n\r\nexport const enabled = `${key}.Enabled`;\r\nexport const enabledHint = `${key}.EnabledHint`;\r\nexport const path = `${key}.Path`;\r\n\r\nexport * as locale from \"./locale\";","export function fillTemplate(template: string, values: Record<string, unknown>): string {\r\n    return template.replace(/\\${(\\w+)}/g, (_, key) => \r\n        values[key] !== undefined ? String(values[key]) : ''\r\n    );\r\n}","import { AmbientLightTileController } from \"./ambient-ight-tile-controller\";\r\nimport { flag } from \"./constants/flag\";\r\nimport { locale } from \"./constants/locale\";\r\nimport { settings } from \"./constants/settings\";\r\nimport { Logger } from \"./utils/logger\";\r\nimport { fillTemplate } from \"./utils/strings\";\r\n\r\nexport class AmbientLightConfig {\r\n    static #checkboxInput = \"chekbox-input\";\r\n    static #textInput = \"text-input\";\r\n    static #inputIdFormat = \"${appId}.${flagPath}.${type}\";\r\n\r\n    //#region Hooks\r\n    //#region trackLightPositionHook\r\n\r\n    public static trackLightPositionHook = (\r\n        doc: AmbientLightDocument,\r\n        change: Record<string, any>\r\n    ) => {\r\n        Logger.log(\"=========================================================\");\r\n        Logger.log(\"---------------------------------------------------------\");\r\n        Logger.log(\"AmbientLight updated!\", document, change, \"x\" in change, \"y\" in change, \"x\" in change || \"y\" in change);\r\n        \r\n        if (\"x\" in change || \"y\" in change) {\r\n            Logger.log(\"Light position changed:\", change.x, change.y);\r\n\r\n            const interactive = doc.getFlag(\r\n                flag.scope,\r\n                flag.interactiveName\r\n            ) as boolean;\r\n            const tileId = doc.getFlag(flag.scope, flag.tileIdName) as string;\r\n\r\n            Logger.log(`tileId: ${tileId}`);\r\n            if (!interactive || !tileId) return;\r\n            const ok = AmbientLightTileController.changeTilePositions(\r\n                tileId,\r\n                change.x,\r\n                change.y\r\n            );\r\n            if (!ok) {\r\n                doc.setFlag(flag.scope, flag.tileIdName, '' as never);\r\n                doc.setFlag(flag.scope, flag.pathName, '' as never);\r\n            }\r\n        }\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region deleteAmbientLightHook\r\n\r\n    public static deleteAmbientLightHook = (\r\n        doc: AmbientLightDocument,\r\n        options: any,\r\n        userId: string\r\n    ) => {\r\n        if (settings.debug) Logger.log(`AMBIENT LIGHT ${doc.id} WAS DELETED`);\r\n\r\n        const tileId = doc.getFlag(flag.scope, flag.tileIdName) as string;\r\n\r\n        if (!tileId) return;\r\n        AmbientLightTileController.deleteTile(tileId, null);\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region renderLightConfigHook\r\n\r\n    public static renderLightConfigHook = (\r\n        app: any,\r\n        html: HTMLElement,\r\n        context: any,\r\n        options: any\r\n    ) => {\r\n        if (options && !options.isFirstRender) return;\r\n\r\n        const document: AmbientLightDocument = app.document;\r\n        const isInteractive =\r\n            document.getFlag(flag.scope, flag.interactiveName) ?? false;\r\n\r\n        const interactiveElement = this.createInteractiveCheckboxHtmlElement(\r\n            app.id,\r\n            isInteractive\r\n        );\r\n\r\n        const path = document.getFlag(flag.scope, flag.pathName);\r\n        const pathElement = this.createInteractivePathHtmlElement(\r\n            app.id,\r\n            path,\r\n            isInteractive\r\n        );\r\n\r\n        const advancedTabContent = html.querySelector(\r\n            '[data-application-part=\"advanced\"]'\r\n        );\r\n        advancedTabContent?.appendChild(interactiveElement);\r\n        advancedTabContent?.appendChild(pathElement!);\r\n\r\n        html.onsubmit = this.onConfigSubmit;\r\n    };\r\n\r\n    private static createInteractiveCheckboxHtmlElement = (\r\n        id: string,\r\n        checked: boolean\r\n    ): HTMLElement => {\r\n        const formGroup = document.createElement(\"div\");\r\n        formGroup.className = \"form-group\";\r\n\r\n        const label = document.createElement(\"label\") as HTMLLabelElement;\r\n        label.innerText = game.i18n!.localize(locale.enabled);\r\n\r\n        const formFields = document.createElement(\"div\");\r\n        formFields.className = \"form-fields\";\r\n\r\n        const input = document.createElement(\"input\") as HTMLInputElement;\r\n        input.type = \"checkbox\";\r\n        input.name = flag.interactive;\r\n        input.checked = checked;\r\n        input.id = fillTemplate(this.#inputIdFormat, {\r\n            appId: id,\r\n            flagPath: flag.interactive,\r\n            type: this.#checkboxInput,\r\n        });\r\n        input.onchange = this.onInteractiveCheckboxChanged;\r\n\r\n        const hint = document.createElement(\"p\") as HTMLParagraphElement;\r\n        hint.className = \"hint\";\r\n        hint.innerText = game.i18n!.localize(locale.enabledHint);\r\n\r\n        formFields.appendChild(input);\r\n        formGroup.appendChild(label);\r\n        formGroup.appendChild(formFields);\r\n        formGroup.appendChild(hint);\r\n\r\n        return formGroup;\r\n    };\r\n\r\n    private static createInteractivePathHtmlElement = (\r\n        appId: string,\r\n        path: string | undefined,\r\n        checked: boolean\r\n    ): HTMLElement => {\r\n        const formGroup = document.createElement(\"div\");\r\n        formGroup.className = \"form-group\";\r\n        formGroup.id = fillTemplate(this.#inputIdFormat, {\r\n            appId: appId,\r\n            flagPath: flag.path,\r\n            type: \"form-group\",\r\n        });\r\n        formGroup.hidden = !checked;\r\n\r\n        const label = document.createElement(\"label\") as HTMLLabelElement;\r\n        label.htmlFor = flag.path;\r\n        label.innerText = game.i18n!.localize(locale.path);\r\n\r\n        const formFields = document.createElement(\"div\");\r\n        formFields.className = \"form-fields\";\r\n        formFields.innerHTML = `<file-picker name=\"${\r\n            flag.path\r\n        }\" type=\"image\" id=\"${appId}-${flag.path}\" value=\"${\r\n            path ?? \"\"\r\n        }\"></file-picker>`;\r\n\r\n        formGroup.appendChild(label);\r\n        formGroup.appendChild(formFields);\r\n\r\n        return formGroup;\r\n    };\r\n\r\n    private static onInteractiveCheckboxChanged = (ev: Event) => {\r\n        const input = ev.target as HTMLInputElement;\r\n        if (!input) return;\r\n\r\n        const appId = input.id.slice(\r\n            0,\r\n            input.id.indexOf(\r\n                fillTemplate(this.#inputIdFormat, {\r\n                    appId: \"\",\r\n                    flagPath: flag.interactive,\r\n                    type: this.#checkboxInput,\r\n                })\r\n            )\r\n        );\r\n        const checked = input.checked;\r\n        const pathFormGroup = document.getElementById(\r\n            fillTemplate(this.#inputIdFormat, {\r\n                appId: appId,\r\n                flagPath: flag.path,\r\n                type: \"form-group\",\r\n            })\r\n        ) as HTMLDivElement;\r\n\r\n        if (!pathFormGroup) return;\r\n        pathFormGroup.hidden = !checked;\r\n    };\r\n\r\n    private static onConfigSubmit = (ev: SubmitEvent) => {\r\n        Logger.log(\"AMBIENT LIGHT CONFIGURATION SUBMITTED\");\r\n\r\n        const interactiveChk = this.getInteractiveCheckbox(\r\n            ev.target as HTMLFormElement\r\n        );\r\n        const pathInput = this.getPathInput(ev.target as HTMLFormElement);\r\n        const appId = this.getAppIdFromInteractiveCheckbox(interactiveChk);\r\n        const lightId = appId.split(\"-\").pop();\r\n        if (!lightId) return;\r\n        const ambientLight = canvas.lighting?.get(lightId);\r\n        if (!ambientLight) return;\r\n        const tileId = ambientLight.document.getFlag(\r\n            flag.scope,\r\n            flag.tileIdName\r\n        );\r\n        let pathComputing =\r\n            pathInput.value ||\r\n            ambientLight.document.getFlag(flag.scope, flag.pathName) ||\r\n            settings.defaultIconPath;\r\n        const path = pathComputing;\r\n\r\n        if (interactiveChk.checked) {\r\n            const changed = AmbientLightTileController.updateTileTextureSource(\r\n                tileId,\r\n                lightId,\r\n                path\r\n            );\r\n            if (changed) return;\r\n\r\n            if (settings.debug) Logger.log(\"CREATING TILE\");\r\n            AmbientLightTileController.createTile(\r\n                path,\r\n                AmbientLightTileController.culcTilePosition(\r\n                    ambientLight.position._x,\r\n                    \"X\"\r\n                ),\r\n                AmbientLightTileController.culcTilePosition(\r\n                    ambientLight.position._y,\r\n                    \"Y\"\r\n                ),\r\n                ambientLight.document\r\n            ).then((data) => {\r\n                if (settings.debug) Logger.log(\"DATA\", data);\r\n            });\r\n        } else {\r\n            AmbientLightTileController.deleteTile(\r\n                tileId,\r\n                ambientLight.document\r\n            );\r\n        }\r\n    };\r\n\r\n    private static getInteractiveCheckbox = (\r\n        form: HTMLFormElement\r\n    ): HTMLInputElement => {\r\n        return form.querySelector(\r\n            `[name=\"${flag.interactive}\"]`\r\n        ) as HTMLInputElement;\r\n    };\r\n\r\n    private static getPathInput = (form: HTMLFormElement): HTMLInputElement => {\r\n        return form.querySelector(`[name=\"${flag.path}\"]`) as HTMLInputElement;\r\n    };\r\n\r\n    private static getAppIdFromInteractiveCheckbox = (\r\n        interactiveChk: HTMLInputElement\r\n    ): string => {\r\n        return interactiveChk.id.slice(\r\n            0,\r\n            interactiveChk.id.indexOf(\r\n                fillTemplate(this.#inputIdFormat, {\r\n                    appId: \"\",\r\n                    flagPath: flag.interactive,\r\n                    type: this.#checkboxInput,\r\n                })\r\n            )\r\n        );\r\n    };\r\n\r\n    //#endregion\r\n    //#endregion\r\n}\r\n","import { AmbientLightTileController } from \"./ambient-ight-tile-controller\";\r\nimport { AmbientLightConfig } from \"./ambient-light-config\";\r\nimport { Switcher } from \"./switch\";\r\n\r\nexport function initHooks() {\r\n    Hooks.once(\"init\", initHook);\r\n}\r\n\r\nfunction initHook(data: any) {\r\n    Hooks.on(\"ready\", readyHook);\r\n    Hooks.on(\"renderAmbientLightConfig\",AmbientLightConfig.renderLightConfigHook);\r\n    Hooks.on(\"updateAmbientLight\", AmbientLightConfig.trackLightPositionHook);\r\n    Hooks.on(\"deleteAmbientLight\", AmbientLightConfig.deleteAmbientLightHook);\r\n\r\n    Hooks.on(\"createTile\", AmbientLightTileController.registerTileClickEvent);\r\n}\r\n\r\nfunction readyHook() {\r\n    // AmbientLightTileController.initTitles();\r\n}\r\n\r\nexport * as register from \"./hooks\";\r\n","import { register } from \"./scripts/hooks\";\r\n\r\nregister.initHooks();\r\n"],"names":["flag","scope","interactiveName","pathName","tileIdName","interactive","path","lightIdName","defaultIconPath","_a","_b","tileHeight","tileWidth","consoleColor1","consoleColor2","consoleColor3","Logger","object","Switcher","__publicField","ev","_AmbientLightTileController","tileId","document","_c","_d","tile","flag.scope","flag.tileIdName","flag.pathName","lightId","flag.lightIdName","imgPath","x","y","ambientLightDoc","tileDoc","settings.tileHeight","settings.tileWidth","event","posX","posY","light","axis","AmbientLightTileController","key","enabled","enabledHint","fillTemplate","template","values","_","_checkboxInput","_textInput","_inputIdFormat","_AmbientLightConfig","__privateAdd","doc","change","flag.interactiveName","options","userId","app","html","context","isInteractive","interactiveElement","pathElement","advancedTabContent","id","checked","formGroup","label","locale.enabled","formFields","input","flag.interactive","__privateGet","hint","locale.enabledHint","appId","flag.path","locale.path","pathFormGroup","interactiveChk","pathInput","ambientLight","settings.defaultIconPath","data","form","AmbientLightConfig","initHooks","initHook","readyHook","register.initHooks"],"mappings":"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"}